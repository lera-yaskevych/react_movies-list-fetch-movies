{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api/api.js","App.tsx","index.tsx"],"names":["MovieCard","props","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","FindMovie","addMovie","useState","query","setQuery","attempted","setAttempt","newMovie","setNewMovie","findNewMovie","a","movieTitle","searchedMovie","fetch","then","response","json","Title","Plot","Poster","imdbID","htmlFor","type","id","placeholder","classNames","value","onChange","event","target","onClick","disabled","findIndex","App","data","ReactDOM","render","document","getElementById"],"mappings":"uwEAKaA,EAA6B,SAACC,GACzC,IACEC,EAIED,EAJFC,MADF,EAKID,EAHFE,mBAFF,MAEgB,GAFhB,EAGEC,EAEEH,EAFFG,OACAC,EACEJ,EADFI,QAGF,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKH,EACLI,IAAI,kBAIV,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJC,IAAI,aAIV,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BJ,SAI/B,sBAAKI,UAAU,UAAf,UACGH,EACD,uBACA,mBAAGM,KAAMJ,EAAT,4BCjCGK,EAA8B,SAAC,GAAD,QACzCC,cADyC,MAChC,GADgC,SAGzC,qBAAKL,UAAU,SAAf,SACGK,EAAOC,KAAI,SAAAC,GAAK,OACf,cAAC,EAAD,eAAkCA,GAAlBA,EAAMC,c,gDCFfC,G,MAA6B,SAACd,GACzC,IAAQe,EAAqBf,EAArBe,SAAUL,EAAWV,EAAXU,OAClB,EAA0BM,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAY,uCAAG,4BAAAC,EAAA,6DCfEC,EDgBUR,EAAzBS,ECfDC,MAAM,GAAD,OAHG,2DAGH,OAAeF,IACxBG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UDaR,KAGnBR,EAHmB,SAGDI,EACfE,MAAK,SAAAhB,GAAK,MAAK,CACdX,MAAOW,EAAMmB,MACb7B,YAAaU,EAAMoB,KACnB7B,OAAQS,EAAMqB,OACd7B,QAAQ,8BAAD,OAAgCQ,EAAMsB,OAAtC,KACPrB,OAAQD,EAAMsB,WATC,kCAYnBd,GAAW,GAZQ,iCCfC,IAACK,IDeF,OAAH,qDAgClB,OACE,qCACE,uBAAMpB,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ8B,QAAQ,cAAjC,yBAIA,qBAAK9B,UAAU,UAAf,SACE,uBACE+B,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZjC,UAAWkC,IAAW,QAAS,CAC7B,aAAclB,EAASR,QAAUM,IAEnCqB,MAAOvB,EACPwB,SAAU,SAACC,GACTxB,EAASwB,EAAMC,OAAOH,OACtBpB,GAAW,SAKfC,EAASR,QAAUM,GACnB,mBAAGd,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE+B,KAAK,SACL/B,UAAU,kBACVuC,QAASrB,EAHX,4BASF,qBAAKlB,UAAU,UAAf,SACE,wBACE+B,KAAK,SACL/B,UAAU,oBACVwC,WA9DSnC,EAChBoC,WAAU,SAAAlC,GAAK,OAAIA,EAAMC,SAAWQ,EAASR,UAE/B,GA4DP+B,QArDW,WACrB7B,EAAS,CAACM,GAAF,mBAAeX,KACvBQ,EAAS,IACTE,GAAW,IA8CH,qCAYLC,EAASR,QACR,sBAAKR,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,eAAegB,Y,QEjGZ0B,EAAuB,WAClC,MAA2B/B,mBAASgC,GAApC,mBAAOtC,EAAP,KAAeK,EAAf,KAEA,OACE,sBAAKV,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYK,OAAQA,MAEtB,qBAAKL,UAAU,UAAf,SACE,cAAC,EAAD,CAAWU,SAAUA,EAAUL,OAAQA,UCf/CuC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1d86c462.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const {\n    title,\n    description = '',\n    imgUrl,\n    imdbUrl,\n  } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {description}\n          <br />\n          <a href={imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api/api';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  addMovie: React.Dispatch<React.SetStateAction<Movie[]>>;\n  movies: Movie[];\n}\n\nexport const FindMovie: React.FC<Props> = (props) => {\n  const { addMovie, movies } = props;\n  const [query, setQuery] = useState('');\n  const [attempted, setAttempt] = useState(false);\n  const [newMovie, setNewMovie] = useState({} as Movie);\n\n  const findNewMovie = async () => {\n    const searchedMovie = getMovie(query);\n\n    setNewMovie(await searchedMovie\n      .then(movie => ({\n        title: movie.Title,\n        description: movie.Plot,\n        imgUrl: movie.Poster,\n        imdbUrl: `https://www.imdb.com/title/${movie.imdbID}/`,\n        imdbId: movie.imdbID,\n      })));\n\n    setAttempt(true);\n  };\n\n  const checkMovieInList = () => {\n    const movieMatch = movies\n      .findIndex(movie => movie.imdbId === newMovie.imdbId);\n\n    if (movieMatch < 0) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const addMovieToList = () => {\n    addMovie([newMovie, ...movies]);\n    setQuery('');\n    setAttempt(false);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': !newMovie.imdbId && attempted,\n              })}\n              value={query}\n              onChange={(event) => {\n                setQuery(event.target.value);\n                setAttempt(false);\n              }}\n            />\n          </div>\n\n          {!newMovie.imdbId && attempted && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findNewMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={checkMovieInList()}\n              onClick={addMovieToList}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {newMovie.imdbId && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...newMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com/?i=tt3896198&apikey=91e17a04&t=';\n\nexport const getMovie = (movieTitle) => {\n  return fetch(`${BASE_URL}${movieTitle}`)\n    .then(response => response.json());\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\ninterface State {\n  movies?: Movie[];\n}\n\nexport const App: React.FC<State> = () => {\n  const [movies, addMovie] = useState(data);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} movies={movies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}